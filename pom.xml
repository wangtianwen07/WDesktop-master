<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.wms.movie</groupId>
	<artifactId>WDesktop</artifactId>
	<packaging>war</packaging>
	<version>1.0.1</version>
	<name>WDesktop</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!-- 主要依赖库的版本定义 -->
		<spring.version>4.0.5.RELEASE</spring.version>
		<spring-data-jpa.version>1.6.0.RELEASE</spring-data-jpa.version>
		<junit.version>4.11</junit.version>
		<hibernate.validator.version>5.1.0.CR1</hibernate.validator.version>
		<ognl.version>3.0.8</ognl.version>
		<struts2.version>2.3.16.2</struts2.version>
		<druid-version>1.0.4</druid-version>
		<hibernate-version>4.3.5.Final</hibernate-version>
		<ehcache.version>2.6.9</ehcache.version>
		<!-- Plugin的属性定义 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.qiniu</groupId>
			<artifactId>sdk</artifactId>
			<version>6.1.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>${ehcache.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>com.google.code</groupId>
			<artifactId>kaptcha</artifactId>
			<version>2.3.2-20131019</version>
		</dependency> -->
		<!--或 https://mvnrepository.com/artifact/kaptcha.wso2/kaptcha -->
		<!-- <dependency>
		    <groupId>kaptcha.wso2</groupId>
		    <artifactId>kaptcha</artifactId>
		    <version>2.3.0.wso2v1</version>
		</dependency> -->
		
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- <dependency>
			<groupId>net.sf</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2.1</version>
		</dependency> -->
		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
			<version>${ognl.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.18.1-GA</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.30</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- AOP begin -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
			<version>3.3.1</version>
			<scope>runtime</scope>
		</dependency>
		<!-- AOP end -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-json-plugin</artifactId>
			<version>${struts2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts.xwork</groupId>
			<artifactId>xwork-core</artifactId>
			<version>${struts2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>${struts2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
			<version>${struts2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-junit-plugin</artifactId>
			<version>${struts2.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Hibernate架包 开始 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>4.0.4.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate-version}</version>
			<exclusions>
				<exclusion>
					<groupId>net.sf.ehcache</groupId>
					<artifactId>ehcache-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Hibernate架包 结束 -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<showWarnings>true</showWarnings>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>**/model/**/*.class</exclude>
							<exclude>**/service/*Service.class</exclude>
							<exclude>**/repository/**/*.class</exclude>
							<exclude>**/dao/**/*.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>

			<!-- 利用yuicompressor-maven-plugin 插件，当打包项目时，自动压缩文件 -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 读取js,css文件采用UTF-8编码 -->
					<encoding>UTF-8</encoding>
					<!-- 不显示js可能的错误 -->
					<jswarn>false</jswarn>
					<!-- 若存在已压缩的文件，会先对比源文件是否有改动。有改动便压缩，无改动就不压缩 -->
					<force>false</force>
					<!-- 压缩之前先执行聚合文件操作 -->
					<preProcessAggregates>true</preProcessAggregates>
					<!-- 排除已压缩的文件，例如jquery-1.8.2.min.js -->
					<excludes>
						<exclude>**/**.min.js</exclude>
						<exclude>**/extjs/**</exclude>
						<exclude>**/resources/**</exclude>
						<exclude>toolpages/**</exclude>
						<exclude>desktop/resources/extjs/**</exclude>
						<exclude>desktop/resources/extjs4.2.2/**</exclude>
					</excludes>
					<!-- 不使用后缀 -->
					<nosuffix>true</nosuffix>
					<!-- 把文件压缩成一行 -->
					<!-- 在指定的列号后插入新行 -->
					<linebreakpos>-1</linebreakpos>
					<!-- 压缩js和css文件 -->
					<includes>
						<include>**/*.js</include>
						<include>**/*.css</include>
						<include>**.js</include>
						<include>desktop/*.js</include>
						<include>desktop/app/*.js</include>
						<include>desktop/desktop/*.js</include>
						<include>desktop/core/*.js</include>
						<include>desktop/module/*.js</include>
						<include>desktop/util/*.js</include>
						<include>desktop/resources/css/*.css</include>
						<!-- <include>**/*.png</include> <include>**/*.jpg</include> -->
					</includes>
					<!-- 指定需要压缩文件的目录 -->
					<sourceDirectory>${basedir}/src/main/webapp</sourceDirectory>
					<outputDirectory>${basedir}/target/${project.artifactId}</outputDirectory>
				</configuration>
			</plugin>



			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId> 
				<version>2.2</version> <executions> <execution> <phase>package</phase> <goals> 
				<goal>shade</goal> </goals> <configuration> <transformers> <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"> 
				<manifestEntries> <Main-Class>${project.groupId}.start.Main</Main-Class> 
				<Build-Number>1.0.2</Build-Number> </manifestEntries> </transformer> <transformer 
				implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> 
				<resource>META-INF/spring.handlers</resource> </transformer> <transformer 
				implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"> 
				<resource>META-INF/spring.schemas</resource> </transformer> <transformer 
				implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer"> 
				<resources> <resource>.txt</resource> <resource>.html</resource> </resources> 
				</transformer> </transformers> </configuration> </execution> </executions> 
				</plugin> -->


			<!-- war打包插件, 设定war包名称不带版本号 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<warSourceExcludes>js/**/**.js,css/**.css,**.js,**.css,desktop/app/**.js,desktop/core/*.js,desktop/desktop/*.js,desktop/*.js</warSourceExcludes>
					<archiveClasses>true</archiveClasses>
					<warName>${project.artifactId}</warName>
					<webResources>
						<resource>
							<directory>src\main\resources</directory>
							<targetPath>WEB-INF\classes</targetPath>
							<includes>
								<include>**</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.7</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<obfuscate>true</obfuscate>
					<proguardInclude>${basedir}/wms.conf</proguardInclude>
					<options>
						<option>-keep class *com.wms.movie.model.**{*;}</option>
						<option>-keep class *com.wms.movie.action.**{*;}</option>
					</options>
					<injar>classes</injar>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
